Utopia release <MStar Semiconductor, Inc.>

These are the building methods for utopia. Read them carefully,
as they tell you what this is all about, explain how to generate 
utopia libraries via menuconfig. Further, there are some naming rules
about the definition generated by menuconfig. You can use them by adding
definitions in Kconfig.

HOW TO BUILD?

1. Build the library only containing single driver:
  a. cp <chip_name>/<config_name> .config (e.g., cp eden/.config_eden_nos_r2_softfloat_static_genera .config).
  b. make defconfig.
  c. make <driver_name> (e.g., make miu).

2. Release the libraries for specific chip if you want to use default configuration:
  a. cp <chip_name>/<config_name> .config (e.g., cp eden/.config_eden_nos_r2_softfloat_static_genera .config).
  b. make defconfig.
  c. make clean.
  d. make.
  e. make bsp.

3. Release the libraries for specific chip if you want to reselect configuration:
  a. cp <chip_name>/<config_name> .config (e.g., cp eden/.config_eden_nos_r2_softfloat_static_genera .config).
  b. make menuconfig (If you entered the menu, choose what want, and then exit. The menuconfig system will save your configuration as ".config").
  c. make clean.
  d. make.
  e. make bsp.

HOW TO USE DEFINITIONS GENERATED BY MENUCONFIG?

1. Add the definitins in Kconfig (e.g., In mxlib/drv/tsp/Kconfig, you can see "config TSP2_ENABLE")
2. Use it in your source code (e.g., The definition "CONFIG_TSP22_ENABLE" can be used)
